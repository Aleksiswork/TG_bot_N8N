"""
–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
"""
import logging
from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from database import Database
from keyboards import (
    get_main_keyboard,
    get_guides_keyboard,
    get_feedback_keyboard,
    get_subscribe_keyboard
)
from utils.checks import check_subscription, is_admin, get_user_info
from config import config, BOT_VERSION

router = Router()
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
try:
    db = Database()
except Exception as e:
    db = None
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Database: {e}")


@router.message(Command("start"))
async def start_command(message: Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    if not message.from_user:
        return

    user_info = get_user_info(message.from_user)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    if db:
        try:
            await db.save_user(message.from_user)  # type: ignore
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (–±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏)
    if config.channel_username:
        is_subscribed = await check_subscription(user_info['id'], bot)
        if not is_subscribed:
            await message.answer(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
                reply_markup=get_subscribe_keyboard()
            )
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –¥–∞–∂–µ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç v{BOT_VERSION}!

üìö –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –≥–∞–π–¥—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.
üì® –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å - –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–∫–∞–∑—ã –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É.

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:
"""

    await message.answer(
        welcome_text,
        reply_markup=get_main_keyboard(user_info['id'])
    )


@router.message(Command("help"))
async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = f"""
ü§ñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É v{BOT_VERSION}

üìö **–ì–∞–π–¥—ã** - –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
üì® **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å** - –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–∫–∞–∑—ã –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É
‚ÑπÔ∏è **–û –±–æ—Ç–µ** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ

üí° **–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/guides - –ì–∞–π–¥—ã
/feedback - –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞

üîß **–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:**
/admin - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
"""

    await message.answer(help_text)


@router.message(Command("status"))
async def status_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
    if not message.from_user:
        return

    user_info = get_user_info(message.from_user)

    status_text = f"""
üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ v{BOT_VERSION}

üë§ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:**
ID: {user_info['id']}
Username: @{user_info['username']}
–ò–º—è: {user_info['first_name']} {user_info['last_name']}
–†–æ–ª—å: {'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' if user_info['is_admin'] else '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}

üîß **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
–ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {config.max_file_size_mb}MB
–ú–∞–∫—Å. —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {config.max_files_per_submission}
–ú–∞–∫—Å. –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {config.max_submission_length} —Å–∏–º–≤–æ–ª–æ–≤

üìÅ –ü–∞–ø–∫–∞ —Ñ–∞–π–ª–æ–≤: {config.files_dir}
"""

    await message.answer(status_text)


@router.message(Command("guides"))
async def guides_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /guides"""
    await message.answer(
        "üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≥–∞–π–¥:",
        reply_markup=get_guides_keyboard()
    )


@router.message(Command("feedback"))
async def feedback_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /feedback"""
    await message.answer(
        "üì® –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n"
        "‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –ø–æ –≥–∞–π–¥–∞–º\n"
        "‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n"
        "‚Ä¢ –ó–∞–∫–∞–∑—ã –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏\n\n"
        "–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç + –¥–æ 5 —Ñ–æ—Ç–æ/—Ñ–∞–π–ª–æ–≤. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å':",
        reply_markup=get_feedback_keyboard()
    )


@router.message(Command("admin"))
async def admin_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
    if not message.from_user or not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        return

    from keyboards import get_admin_keyboard
    await message.answer("‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=get_admin_keyboard())


@router.callback_query(F.data == "check_subscription")
async def check_subscription_callback(callback: CallbackQuery, bot: Bot):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª"""
    if not callback.from_user:
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        return

    is_subscribed = await check_subscription(callback.from_user.id, bot)

    if is_subscribed:
        if callback.message:
            await callback.message.edit_text(  # type: ignore
                "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.",
                reply_markup=None
            )
            await callback.message.answer(  # type: ignore
                "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
                reply_markup=get_main_keyboard(callback.from_user.id)
            )
    else:
        await callback.answer(
            "‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            show_alert=True
        )


@router.message(F.text == "üìö –ì–∞–π–¥—ã")
async def guides_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ì–∞–π–¥—ã'"""
    await guides_command(message)


@router.message(F.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
async def about_bot_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û –±–æ—Ç–µ'"""
    about_text = f"""
ü§ñ **–û –±–æ—Ç–µ v{BOT_VERSION}**

–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –≥–∞–π–¥–æ–≤ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.

üìö **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≥–∞–π–¥–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –ó–∞–∫–∞–∑—ã –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

üîß **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
‚Ä¢ –í–µ—Ä—Å–∏—è: {BOT_VERSION}
‚Ä¢ –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {config.max_file_size_mb}MB
‚Ä¢ –ú–∞–∫—Å. —Ñ–∞–π–ª–æ–≤: {config.max_files_per_submission}
‚Ä¢ –ú–∞–∫—Å. —Ç–µ–∫—Å—Ç: {config.max_submission_length} —Å–∏–º–≤–æ–ª–æ–≤

üìû **–°–≤—è–∑—å:**
–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –∑–∞–∫–∞–∑–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª "üì® –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å".

–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! üôè
"""

    await message.answer(about_text)


@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥'"""
    if not message.from_user:
        return

    await message.answer(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_keyboard(message.from_user.id)
    )
